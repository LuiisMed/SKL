@model IEnumerable<Fase>

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <div id="cardsContainer" class="row"></div>
    </div>

    <div class="content-backdrop fade"></div>

</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/FileSaver/dist/FileSaver.min.js"></script>


    <script>
        createChartElement = (containerId, chartId) => {
            let containerElement = document.getElementById(containerId);

            let newDiv = document.createElement("div");
            newDiv.className = "text-center";
            newDiv.id = chartId;

            containerElement.appendChild(newDiv);
        };

        async function loadCardsWithCharts() {
            try {
                const response = await fetch('@Url.Action("ChartDataJson", "VisualManagement")');
                const data = await response.json();
                console.log(data)

                const cardsContainer = document.getElementById("cardsContainer");
                cardsContainer.innerHTML = ''; 

                data.forEach((chartData, index) => {
                    const colDiv = document.createElement("div");
                    colDiv.className = "col-md-6 col-lg-4 order-2 mb-4";

                    const cardDiv = document.createElement("div");
                    cardDiv.className = "card h-100";

                    const cardHeader = document.createElement("div");
                    cardHeader.className = "card-header d-flex align-items-center justify-content-between";

                    const titleHeader = document.createElement("h5");
                    titleHeader.className = "card-title m-0 me-2";
                    titleHeader.textContent = chartData.phase;

                    const cardBody = document.createElement("div");
                    cardBody.className = "card-body";

                    const chartsRow = document.createElement("div");
                    const chartId = `chart${index}`;
                    chartsRow.id = chartId; 

                    cardHeader.appendChild(titleHeader);
                    cardBody.appendChild(chartsRow);
                    cardDiv.appendChild(cardHeader);
                    cardDiv.appendChild(cardBody);
                    colDiv.appendChild(cardDiv);
                    cardsContainer.appendChild(colDiv);

                    var options = {
                        chart: {
                            type: "pie",
                            height: 400
                        },
                        labels: ["Completado", "Pendiente"],
                        series: [chartData.completed, chartData.notCompleted],
                        colors: ["#00E396", "#FF4560"],
                        dataLabels: {
                            enabled: true,
                            formatter: function (val, opts) {
                                return val.toFixed(0) + "%";
                            }
                        },
                        legend: {
                            position: 'bottom'
                        }
                    };

                    const chart = new ApexCharts(document.getElementById(chartId), options);
                    chart.render();
                });
            } catch (error) {
                console.error("Error al cargar las tarjetas con gráficos:", error);
            }
        }

        loadCardsWithCharts();


    </script>
}