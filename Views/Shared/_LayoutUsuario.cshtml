<!DOCTYPE html>
<html lang="en"
      data-theme="theme-default"
      data-assets-path="~/assets/"
      data-template="vertical-menu-template-free">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SKL</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />



    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="~/assets/img/favicon/favicon.ico" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
          rel="stylesheet" />

    <!-- Icons. Uncomment required icon fonts -->
    <link rel="stylesheet" href="~/assets/vendor/fonts/boxicons.css" />

    <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="~/assets/vendor/css/core.css" class="template-customizer-core-css" />
    <link rel="stylesheet" href="~/assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="~/assets/css/demo.css" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />

    <link rel="stylesheet" href="~/assets/vendor/libs/apex-charts/apex-charts.css" />

    <!-- Helpers -->
    <script src="~/assets/vendor/js/helpers.js"></script>
    <script src="~/lib/aggrid/ag-grid-enterprise.min.js"></script>


    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="~/assets/js/config.js"></script>

    @RenderSection("CSS", required: false)

</head>
<body>

    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
                <div class="app-brand demo">
                    <a class="app-brand-link" asp-controller="HomeUsuario" asp-action="Index">
                        <span class="app-brand-logo demo"><img type="image/x-icon" src="~/assets/img/favicon/favicon-32x32.png" width="25px"></span>
                        <span class="app-brand-text demo menu-text fw-bolder ms-2">Skip Level</span>
                    </a>

                    <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
                        <i class="bx bx-chevron-left bx-sm align-middle"></i>
                    </a>
                </div>

                <div class="menu-inner-shadow"></div>

                <ul class="menu-inner py-1">
                    <!-- Home/Inicio -->

                    <li class="menu-item">
                        <a asp-controller="HomeUsuario" asp-action="Index" class="menu-link">
                            <i class="menu-icon tf-icons bx bx-home-circle"></i>
                            <div data-i18n="Analytics">Home</div>
                        </a>
                    </li>

                    
                </ul>
            </aside>
            <div class="layout-page">
                <nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
                     id="layout-navbar">
                    <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                        <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                            <i class="bx bx-menu bx-sm"></i>
                        </a>
                    </div>

                    <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
                        <!-- Search -->
                        <div class="navbar-nav align-items-center">
                            <div class="nav-item d-flex align-items-center">
                                <i class="bx bx-search fs-4 lh-0"></i>
                                <input type="text"
                                       class="form-control border-0 shadow-none"
                                       placeholder="Search..."
                                       aria-label="Search..." />
                            </div>
                        </div>
                        <!-- /Search -->

                        <ul class="navbar-nav flex-row align-items-center ms-auto">

                            @{
                                var userId = User.Claims.Where(c => c.Type == ClaimTypes.NameIdentifier).Select(c => c.Value).SingleOrDefault();
                                var role = User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
                                var fetchUrl = Url.Action("NotificationsJson", "Notifications");
                                var profileUrl = Url.Action("Profile", "Usuario");

                            }

                            <button type="button" class="btn btn-primary btn-icon rounded-pill dropdown-toggle hide-arrow position-relative"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bx bxs-bell"></i>
                                <span class="notification-indicator position-absolute top-0 start-100 translate-middle p-1 bg-danger border border-light rounded-circle d-none">
                                    <span class="visually-hidden">New alerts</span>
                                </span>
                            </button>

                            <ul class="dropdown-menu dropdown-menu-end">
                            </ul>



                            <li class="nav-item navbar-dropdown dropdown-user dropdown">
                                <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
                                    <div class="avatar">
                                        @if (User.Identity!.IsAuthenticated)
                                        {
                                            var imagePath = User.Claims.Where(c => c.Type == "imageFile").Select(c => c.Value).SingleOrDefault();

                                            if (!string.IsNullOrEmpty(imagePath))
                                            {
                                                <img src="~/img/@imagePath" alt="User Image" class="w-px-40 h-auto rounded-circle" />
                                            }
                                            else
                                            {
                                                <img src="~/assets/img/avatars/Unknkow.png" alt="User Image" class="w-px-40 h-auto rounded-circle" />
                                            }
                                        }

                                    </div>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="#">
                                            <div class="d-flex">
                                                <div class="flex-shrink-0 me-3">
                                                    <div class="avatar">
                                                        @if (User.Identity!.IsAuthenticated)
                                                        {
                                                            var imagePath = User.Claims.Where(c => c.Type == "imageFile").Select(c => c.Value).SingleOrDefault();

                                                            if (!string.IsNullOrEmpty(imagePath))
                                                            {
                                                                <img src="~/img/@imagePath" alt="User Image" class="w-px-40 h-auto rounded-circle" />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/assets/img/avatars/Unknkow.png" alt="User Image" class="w-px-40 h-auto rounded-circle" />
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1">
                                                    @if (User.Identity!.IsAuthenticated)
                                                    {
                                                        <span class="fw-semibold d-block">@User.Claims.Where(c => c.Type == ClaimTypes.Name).Select(c => c.Value).SingleOrDefault()</span>
                                                        <small class="text-muted">@User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault()</small>
                                                    }
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                    <li>
                                        <div class="dropdown-divider"></div>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@($"{profileUrl}?idusr={userId}&role={role}")">
                                            <i class="bx bx-user me-2"></i>
                                            <span class="align-middle">My Profile</span>
                                        </a>
                                    </li>
                                    <li>
                                        <div class="dropdown-divider"></div>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" asp-controller="Home" asp-action="Logout">
                                            <i class="bx bx-power-off me-2"></i>
                                            <span class="align-middle">Log Out</span>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                            <!--/ User -->
                        </ul>
                    </div>
                </nav>
                @RenderBody()
            </div>

        </div>

        <div class="layout-overlay layout-menu-toggle"></div>

    </div>





    <script src="~/assets/vendor/libs/jquery/jquery.js"></script>
    <script src="~/assets/vendor/libs/popper/popper.js"></script>
    <script src="~/assets/vendor/js/bootstrap.js"></script>
    <script src="~/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="~/lib/select2/select2.min.js"></script>
    <!--SCRIPTS PO-->
    <script src="~/lib/jquery-ui-1.13.2.custom/jquery-ui.min.js"></script>
    @*     <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    *@
    <script src="~/lib/jquery-slimscroll/jquery.slimscroll.min.js"></script>

    <script src="~/assets/vendor/js/menu.js"></script>

    <!-- Vendors JS -->
    <script src="~/assets/vendor/libs/apex-charts/apexcharts.js"></script>




    <!-- Main JS -->
    <script src="~/assets/js/main.js"></script>

    <!-- Page JS -->
    <script src="~/assets/js/dashboards-analytics.js"></script>





    <!-- Place this tag in your head or just before your close body tag. -->
    <script async defer src="https://buttons.github.io/buttons.js"></script>
    <script src="~/assets/js/ui-toasts.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const userId = '@userId';
            const url = '@fetchUrl'; 

            try {
                const response = await fetch(`${url}?IdUser=${userId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error(`Error: ${response.statusText}`);
                }

                const notifications = await response.json();
                console.log(notifications)
                renderNotifications(notifications); 
                manageIndicator(notifications);     
            } catch (error) {
                console.error('Error al obtener las notificaciones:', error);
            }
        });

        function renderNotifications(notifications) {
            const notificationDropdown = document.querySelector('.dropdown-menu');
            notificationDropdown.innerHTML = '';

            const unreadNotifications = notifications.filter(notification => !notification.isReaded);

            unreadNotifications.forEach(notification => {
                const actionUrl = `@Url.Action("Update", "Notifications")?IdNotification=${notification.idNotification}&IdUsr=${notification.idUsr}&IdFase=${notification.idFase}&IsReaded=${true}`;

                const notificationItem = `
                        <li>
                            <a class="dropdown-item" href="${actionUrl}">
                                ${notification.message}
                            </a>
                        </li>
                    `;
                notificationDropdown.insertAdjacentHTML('beforeend', notificationItem);
            });
        }

        function manageIndicator(notifications) {
            const hasUnread = notifications.some(notification => !notification.isReaded); 
            const indicator = document.querySelector('.notification-indicator');

            if (hasUnread) {
                indicator.classList.remove('d-none'); 
            } else {
                indicator.classList.add('d-none'); 
            }
        }

    </script>




    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
